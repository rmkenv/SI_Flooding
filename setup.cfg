[metadata]
name = si-flooding
version = 1.0.0
description = A comprehensive flood risk analysis toolkit
long_description = file: README.md
long_description_content_type = text/markdown
author = SI_Flooding Team
author_email = contact@si-flooding.org
license = MIT
license_file = LICENSE
url = https://github.com/rmkenv/SI_Flooding
project_urls =
    Bug Tracker = https://github.com/rmkenv/SI_Flooding/issues
    Documentation = https://si-flooding.readthedocs.io/
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: GIS

[options]
packages = find:
package_dir =
    = src
python_requires = >=3.8
install_requires =
    pandas>=1.5.0
    numpy>=1.20.0
    scikit-learn>=1.0.0
    matplotlib>=3.5.0
    joblib>=1.0.0
    geopandas>=0.12.0
    shapely>=1.8.0
    rasterio>=1.3.0
    contextily>=1.2.0
    requests>=2.28.0
    urllib3>=1.26.0

[options.packages.find]
where = src

[options.extras_require]
dev =
    pytest>=7.0.0
    black>=22.0.0
    isort>=5.10.0
    flake8>=5.0.0
    mypy>=0.991
    bandit>=1.7.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
viz =
    plotly>=5.0.0
    seaborn>=0.11.0
    folium>=0.14.0

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude = 
    .git,
    __pycache__,
    venv,
    .venv,
    build,
    dist,
    *.egg-info

[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = si_flooding
known_third_party = pandas,numpy,matplotlib,geopandas,shapely,requests

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
ignore_missing_imports = True

[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
